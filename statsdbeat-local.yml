# config to publish to a docker instance 
################### Statsdbeat Configuration Example #########################

############################# Statsdbeat ######################################

statsdbeat:
  # Defines how often an event is sent to the output
  period: 1s
  statsdserver: ":8127"  


setup.template.name: "statsdbeat-%{[agent.version]}"
setup.template.pattern: "statsdbeat-%{[agent.version]}-*"

setup.template.enabled: true
setup.template.overwrite: false
setup.ilm.enabled: false

#============================== Kibana =====================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  #host: "localhost:5601"

  # Kibana Space ID
  # ID of the Kibana Space into which the dashboards should be loaded. By default,
  # the Default Space will be used.
  #space.id:

#============================= Elastic Cloud ==================================

# These settings simplify using statsdbeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
#cloud.auth:

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["localhost:9200"]
  index: "statsdbeat-%{[agent.version]}-%{+yyyy.MM.dd}"
  indices:
    - index: "statsdbeat-lt-%{[agent.version]}-%{+YYYY.MM.dd}"
      when.equals:
        statsd.ctx.lt: "1"  #lt: longterm; this index will be kept for a long term.

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"


#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

processors:
 # - add_host_metadata: ~
 # - add_cloud_metadata: ~
   - drop_fields:
        fields: ["ecs", "host"]
 

#================================ Logging =====================================

logging.level: info
logging.metrics.enabled: false
xpack.monitoring.enabled: false

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]

#============================== Xpack Monitoring ===============================
# statsdbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
# xpack.monitoring.enabled: false

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well. Any setting that is not set is
# automatically inherited from the Elasticsearch output configuration, so if you
# have the Elasticsearch output configured, you can simply uncomment the
# following line.
#xpack.monitoring.elasticsearch:

#================================= Migration ==================================

# This allows to enable 6.7 migration aliases
#migration.6_to_7.enabled: true
